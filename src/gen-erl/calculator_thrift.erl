%%
%% Autogenerated by Thrift Compiler (0.11.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(calculator_thrift).
-behaviour(thrift_service).


-include("calculator_thrift.hrl").

-export([struct_info/1, function_info/2, function_names/0]).

struct_info(_) -> erlang:error(function_clause).
%%% interface
% ping(This)
function_info('ping', params_type) ->
  {struct, []}
;
function_info('ping', reply_type) ->
  {struct, []};
function_info('ping', exceptions) ->
  {struct, []}
;
% add(This, Num1, Num2)
function_info('add', params_type) ->
  {struct, [{1, i32},
          {2, i32}]}
;
function_info('add', reply_type) ->
  i32;
function_info('add', exceptions) ->
  {struct, []}
;
% calculate(This, Logid, W)
function_info('calculate', params_type) ->
  {struct, [{1, i32},
          {2, {struct, {'tutorial_types', 'Work'}}}]}
;
function_info('calculate', reply_type) ->
  i32;
function_info('calculate', exceptions) ->
  {struct, [{1, {struct, {'tutorial_types', 'InvalidOperation'}}}]}
;
% zip(This)
function_info('zip', params_type) ->
  {struct, []}
;
function_info('zip', reply_type) ->
  oneway_void;
function_info('zip', exceptions) ->
  {struct, []}
;
function_info(Function, InfoType) ->
  shared_service_thrift:function_info(Function, InfoType).

function_names() -> 
  ['ping', 'add', 'calculate', 'zip'].

